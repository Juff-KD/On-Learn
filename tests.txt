-- sidenav
<div class="flex h-screen flex-col justify-between border-e bg-white">
  <div class="px-4 py-6">
    <span class="grid h-10 w-32 place-content-center rounded-lg bg-gray-100 text-xs text-gray-600">
      Logo
    </span>

    <ul class="mt-6 space-y-1">
      <li>
        <a
          href="#"
          class="block rounded-lg bg-gray-100 px-4 py-2 text-sm font-medium text-gray-700"
        >
          General
        </a>
      </li>

      <li>
        <details class="group [&_summary::-webkit-details-marker]:hidden">
          <summary
            class="flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700"
          >
            <span class="text-sm font-medium"> Teams </span>

            <span class="shrink-0 transition duration-300 group-open:-rotate-180">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="size-5"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                  clip-rule="evenodd"
                />
              </svg>
            </span>
          </summary>

          <ul class="mt-2 space-y-1 px-4">
            <li>
              <a
                href="#"
                class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700"
              >
                Banned Users
              </a>
            </li>

            <li>
              <a
                href="#"
                class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700"
              >
                Calendar
              </a>
            </li>
          </ul>
        </details>
      </li>

      <li>
        <a
          href="#"
          class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700"
        >
          Billing
        </a>
      </li>

      <li>
        <a
          href="#"
          class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700"
        >
          Invoices
        </a>
      </li>

      <li>
        <details class="group [&_summary::-webkit-details-marker]:hidden">
          <summary
            class="flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700"
          >
            <span class="text-sm font-medium"> Account </span>

            <span class="shrink-0 transition duration-300 group-open:-rotate-180">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="size-5"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                  clip-rule="evenodd"
                />
              </svg>
            </span>
          </summary>

          <ul class="mt-2 space-y-1 px-4">
            <li>
              <a
                href="#"
                class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700"
              >
                Details
              </a>
            </li>

            <li>
              <a
                href="#"
                class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700"
              >
                Security
              </a>
            </li>

            <li>
              <form action="#">
                <button
                  type="submit"
                  class="w-full rounded-lg px-4 py-2 text-sm font-medium text-gray-500 [text-align:_inherit] hover:bg-gray-100 hover:text-gray-700"
                >
                  Logout
                </button>
              </form>
            </li>
          </ul>
        </details>
      </li>
    </ul>
  </div>

  <div class="sticky inset-x-0 bottom-0 border-t border-gray-100">
    <a href="#" class="flex items-center gap-2 bg-white p-4 hover:bg-gray-50">
      <img
        alt=""
        src="https://images.unsplash.com/photo-1600486913747-55e5470d6f40?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1770&q=80"
        class="size-10 rounded-full object-cover"
      />

      <div>
        <p class="text-xs">
          <strong class="block font-medium">Eric Frusciante</strong>

          <span> eric@frusciante.com </span>
        </p>
      </div>
    </a>
  </div>
</div>
--------------------------/--/


<div role="tablist" class="tabs tabs-lifted">
  <input type="radio" name="my_tabs_1" role="tab" class="tab" aria-label="Ai" />
  <div role="tabpanel" class="tab-content bg-base-100 border-base-200 rounded-box p-6">
    Ai
  </div>

  <input
    type="radio"
    name="my_tabs_1"
    role="tab"
    class="tab"
    aria-label="Ui"
    checked="checked" />
  <div role="tabpanel" class="tab-content bg-base-100 border-base-200 rounded-box p-6">
    Ui
  </div>

  <input type="radio" name="my_tabs_1" role="tab" class="tab" aria-label="Colors" />
  <div role="tabpanel" class="tab-content bg-base-400 border-base-200 rounded-box p-6">
    Colors
  </div>
</div>`;



// const ThemeBtn = `
// <label class="grid cursor-pointer place-items-center">
//   <input
//     type="checkbox"
//     value="synthwave"
//     class="toggle theme-controller bg-base-content col-span-2 col-start-1 row-start-1" />
//   <svg
//     class="stroke-base-100 fill-base-100 col-start-1 row-start-1"
//     xmlns="http://www.w3.org/2000/svg"
//     width="14"
//     height="14"
//     viewBox="0 0 24 24"
//     fill="none"
//     stroke="currentColor"
//     stroke-width="2"
//     stroke-linecap="round"
//     stroke-linejoin="round">
//     <circle cx="12" cy="12" r="5" />
//     <path
//       d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4" />
//   </svg>
//   <svg
//     class="stroke-base-100 fill-base-100 col-start-2 row-start-1"
//     xmlns="http://www.w3.org/2000/svg"
//     width="14"
//     height="14"
//     viewBox="0 0 24 24"
//     fill="none"
//     stroke="currentColor"
//     stroke-width="2"
//     stroke-linecap="round"
//     stroke-linejoin="round">
//     <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
//   </svg>
// </label>`;


  <!-- <input type="email" id="UserEmail" placeholder="john@rhcp.com" class="input input-success input-sm " /> -->

  <!-- <div id=" markdown-content"></div> -->
  <!-- <github-md>#Example</github-md> -->
  <!-- <md>##this is mdtag</md> -->

  <!-- <button class="btn btn-ghost btn-circle"> -->
  <!--   <!-- License: PD. Made by Mary Akveo: https://maryakveo.com/ --> -->
  <!--   <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 20 20" stroke="currentColor"> -->
  <!--     <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" -->
  <!--       d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" /> -->
  <!--   </svg> -->
  <!-- </button> -->


  <!-- sun icon -->
  <svg
    class="swap-on h-8 w-8 fill-current"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24">
    <path
      d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z" />
  </svg>

  <!-- moon icon -->
  <svg
    class="swap-off h-8 w-8 fill-current"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24">
    <path
      d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z" />
  </svg>



// const themes = {
//   light: {
//     backgroundColor: '#ffffff',
//     textColor: '#1a202c',
//   },
//   dark: {
//     backgroundColor: '#1a202c',
//     textColor: '#f7fafc',
//   },
// };
//
// function applyTheme(theme) {
//   const rootTheme = document.documentElement;
//
//   if (theme === 'dark') {
//     rootTheme.classList.add('dark');
//   } else {
//     rootTheme.classList.remove('dark');
//   }
//
//   rootTheme.style.backgroundColor = themes[theme].backgroundColor;
//   rootTheme.style.color = themes[theme].textColor;
//
// }
//
// function toggleTheme() {
//   const currentTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
//   const newTheme = currentTheme === 'light' ? 'dark' : 'light';
//   applyTheme(newTheme);
// }
//
// document.addEventListener('DOMContentLoaded', () => {
//   applyTheme('light'); // Initialize with light theme

// const toggleButton = document.getElementById('BtnThemeChange');
// toggleButton.innerHTML = ThemeChangeBtn;
// toggleButton.className = 'btn btn-primary';
// toggleButton.addEventListener('click', toggleTheme);
// toggleButton.appendChild(ThemeChangeBtn);
// toggleButton.appendChild(themeLabel);
// });
//--------------------------------------- +++++ ------------//
// const themes = {
//   light: {
//     backgroundColor: '#ffffff',
//     textColor: '#1a202c',
//   },
//   dark: {
//     backgroundColor: '#1a202c',
//     textColor: '#f7fafc',
//   },
// };
//
// function applyTheme(theme) {
//   const rootTheme = document.documentElement;
//   rootTheme.classList.toggle('dark', theme === 'dark'); // Toggle 'dark' class
//
//   rootTheme.style.backgroundColor = themes[theme].backgroundColor;
//   rootTheme.style.color = themes[theme].textColor;
//
//   // Toggle sun/moon icons
//   const sunIcon = document.querySelector('.swap-off');
//   const moonIcon = document.querySelector('.swap-on');
//   sunIcon.classList.toggle('hidden', theme === 'dark');
//   moonIcon.classList.toggle('hidden', theme !== 'dark');
// }
//
// function toggleTheme() {
//   const currentTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
//   const newTheme = currentTheme === 'light' ? 'dark' : 'light';
//   applyTheme(newTheme);
// }
//
// document.addEventListener('DOMContentLoaded', () => {
//   applyTheme('light');
//
//   const toggleButton = document.getElementById('BtnThemeChange');
//   toggleButton.addEventListener('click', toggleTheme);
// });
// Notes for later..
// -----------------+++++-------------------------------//
// :NOTE1: tips to handle the workspace..
// function showContent(targetId) {
// Hide all content sections
//   document.querySelectorAll('[id^="content"]').forEach((content) => {
//     content.classList.add('hidden');
//   });
//
//   // Show the target content section
//   const targetContent = document.getElementById(targetId);
//   if (targetContent) {
//     targetContent.classList.remove('hidden');
//   }
// }
//
// document.querySelectorAll('button[data-target]').forEach((button) => {
//   button.addEventListener('click', () => {
//     const targetId = button.getAttribute('data-target');
//     showContent(targetId);
//   });
// });
//
// // Optionally, show the first content by default
// showContent('content1');
//-------------------+++++-----------------------------//
// :NOTE2: tips to handle the workspace..
// // script.js

// $(document).ready(function () {
// Hide all content sections except the first one
//   $('[id^="content"]').hide();
//   $('#content1').show();
//
//   // Add click event listeners to buttons
//   $('button[data-target]').click(function () {
//     const targetId = $(this).attr('data-target'); // Get the target content ID
//     $('[id^="content"]').hide(); // Hide all content sections
//     $(`#${targetId}`).show(); // Show the target content section
//   });
// });
// -----------------------------++++++-------------------//
//// MdRendering in HTML
// const data =
//   "https://raw.githubusercontent.com/Juff-KD/On-Learn/18c750d878a8b53c542593340a6a56a5be16a93c/script/hello.md";

// fetch(data)
//   .then((response) => response.text())
//   .then((markdown) => {
//     // fetchedMarkdownData = markdown;
//
//     const converter = new showdown.Converter();
//     const html = converter.makeHtml(markdown);
//     document.getElementById("ptag").innerHTML += html;
//   })
//   .catch((error) => {
//     console.error("Error fetching or converting Markdown:", error);
//     // Handle errors gracefully, e.g., display an error message to the user
//   });

